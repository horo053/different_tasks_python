# 1. На обработку поступает натуральное число. Нужно написать программу, которая выводит на экран сумму четных цифр
# этого числа или 0, если четных цифр в записи нет. Программист торопился и написал программу неправильно.
# Найдите все ошибки в этой программе (их может быть одна или несколько). Известно, что каждая ошибка затрагивает
# только одну строку и может быть исправлена без изменения других строк.
n = int(input())
s = 0
while n > 0:
    if n % 2 == 0:
        s += n % 10
    n //= 10
print(s)



# 2. На обработку поступает последовательность из 8 целых чисел. Известно, что вводимые числа по абсолютной
# величине не превышают 10**12. Нужно написать программу, которая выводит на экран количество делящихся нацело на
# 4 чисел в исходной последовательности и максимальное делящееся нацело на 4 число. Если делящихся нацело на
# 4 чисел нет, на экран требуется вывести «NO». Программист торопился и написал программу неправильно.
# Найдите все ошибки в этой программе (их может быть одна или несколько). Известно, что каждая ошибка затрагивает
# только одну строку и может быть исправлена без изменения других строк.
n = 8
count = 0
maximum = -10**6 - 1
for i in range(1, n + 1):
    x = int(input())
    if x % 4 == 0:
        count += 1
        if x > maximum:
            maximum = x
if count > 0:
    print(count)
    print(maximum)
else:
    print('NO')


# 3. На обработку поступает последовательность из 4 целых чисел. Известно, что вводимые числа по абсолютной величине
# не превышают 10**8. Нужно написать программу, которая выводит на экран количество нечетных чисел в исходной
# последовательности и максимальное нечетное число. Если нечетных чисел нет, требуется на экран вывести «NO».
# Программист торопился и написал программу неправильно. Найдите все ошибки в этой программе (их может быть одна или несколько).
# Известно, что каждая ошибка затрагивает только одну строку и может быть исправлена без изменения других строк.
count = 0
maximum = -1
for i in range(4):
    x = int(input())
    if x % 2 != 0:
        count += 1
        if x > maximum:
            maximum = x
if count > 0:
    print(count)
    print(maximum)
else:
    print('NO')


# 4. На вход программе подается натуральное число n. Напишите программу, которая печатает звездную рамку размерами n×19.
n = int(input())
for i in range(1, n + 1):
    if i == 1 or i == n:
        print('*' * 19)
    else:
        print('*' + ' ' * 17 + '*')


# 5. Дано натуральное число n(n>99). Напишите программу, которая определяет его третью (с начала) цифру.
n = int(input())
while n > 999:
    n //= 10
print(n % 10)


# 6. Дано натуральное число. Напишите программу, которая вычисляет:
# количество цифр 3 в нем;
# сколько раз в нем встречается последняя цифра;
# количество четных цифр;
# сумму его цифр, больших пяти;
# произведение цифр, больших семи (если цифр больших семи нет, то вывести 1, если такая цифра одна, то вывести ее);
# сколько раз в нем встречаются цифры 0 и 5 (всего суммарно).
n = int(input())
count3 = 0
countLast = 0
countChet = 0
sumBig5 = 0
multyBig7 = 1
count05 = 0
last = n % 10
while n > 0:
    x = n % 10
    if x == 3:
        count3 += 1
    if x == last:
        countLast += 1
    if x % 2 == 0:
        countChet += 1
    if x > 5:
        sumBig5 += x
    if x > 7:
        multyBig7 *= x
    if x == 0 or x == 5:
        count05 += 1
    n //= 10
print(count3)
print(countLast)
print(countChet)
print(sumBig5)
print(multyBig7)
print(count05)