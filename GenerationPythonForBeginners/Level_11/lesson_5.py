# 1. На вход программе подается строка текста. Напишите программу, которая выводит слова введенной строки в столбик.
s = input()
print(*s.split(), sep='\n')


# 2. На вход программе подается строка текста, содержащая имя, отчество и фамилию человека.
# Напишите программу, которая выводит инициалы человека.
s = input().split()
s1 = [i[0]+'.' for i in s]
print(''.join(s1))


# 3. В операционной системе Windows полное имя файла состоит из буквы диска, после которого ставится двоеточие и
# символ  "\",  затем через такой же символ перечисляются подкаталоги (папки), в которых находится файл, в конце
# пишется имя файла (C:\Windows\System32\calc.exe). На вход программе подается одна строка с корректным именем файла
# в операционной системе Windows. Напишите программу, которая разбирает строку на части, разделенные символом "\".
# Каждую часть вывести в отдельной строке.
# Примечание. В Python символ \ обычно используется для создания специальных символьных последовательностей, которые
# представляют собой управляющие символы или экранированные последовательности. Например, \n представляет символ новой
# строки, \t представляет символ табуляции и т.д. Однако если символ \ используется как часть строки, его следует
# экранировать, т.е. использовать два обратных слэша \\.
s = input().split('\\')
print(*s, sep='\n')


# 4. На вход программе подается строка текста, содержащая целые числа. Напишите программу,
# которая по заданным числам строит столбчатую диаграмму.
lst = input().split()
for i in lst:
    print("+" * int(i))


# 5. На вход программе подается строка текста, содержащая 4 целых неотрицательных числа, разделенных точкой.
# Напишите программу, которая определяет, является ли введенная строка текста корректным ip-адресом.
s = input().split('.')
c = 0
for i in s:
    if 0 <= int(i) < 256:
        c += 1
if c == len(s): print('ДА')
else: print('НЕТ')


# 6. На вход программе подается строка текста и строка-разделитель. Напишите программу, которая вставляет указанный
# разделитель между каждым символом введенной строки текста.
n = input()
k = input()
print(k.join(n))


# 7. На вход программе подается строка текста, содержащая целые числа. Из данной строки формируется список чисел.
# Напишите программу, которая подсчитывает, сколько в полученном списке пар элементов, равных друг другу. Считается,
# что любые два элемента, равные друг другу образуют одну пару, которую необходимо посчитать.
s = input().split()
c = 0
for i in range(len(s)):
    for j in range(i + 1, len(s)):
        if s[j] == s[i]:
            c += 1
print(c)