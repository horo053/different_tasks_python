import sys
#3. На вход программе подаются данные в формате ключ=значение, записанные через пробел.
# Значениями здесь являются целые числа (см. пример ниже). Необходимо прочитать строку с этими данными и
# на их основе сформировать словарь d, используя функцию dict(). Результирующий словарь вывести на экран командой:
# print(*sorted(d.items()))
list_str = [i.replace('=', ' ').split() for i in input().split()]
for i in list_str:
    for ind, it in enumerate(i):
        if ind % 2 != 0: i[ind] = int(it)
d = dict(list_str)
print(*sorted(d.items()))


#4. На вход программе поступают данные в виде набора строк в формате:
# ключ1=значение1
# ключ2=значение2
# ...
# ключN=значениеN
# Ключами здесь выступают целые числа (см. пример ниже). В программе уже реализовано считывание всех строк и сохранение их в виде списка:
# lst_in = list(map(str.strip, sys.stdin.readlines()))
# Необходимо преобразовать список lst_in в словарь d (без использования функции dict()) и вывести полученный словарь на экран командой:
# print(*sorted(d.items()))
lst_in = [i.split("=") for i in list(map(str.strip, sys.stdin.readlines()))]
d = {}
for i in lst_in:
    for ind, it in enumerate(i):
        if ind == 0: i[ind] = int(it)
    d[i[0]] = i[1]
print(*sorted(d.items()))


#5. На вход программе подаются данные в формате ключ=значение, записанные через пробел.
# Необходимо прочитать строку с этими данными и на их основе сформировать словарь.
# Затем проверить, существуют ли в словаре ключи со значениями: 'house', 'True' и '5' (все ключи - строки).
# Если все они существуют, то вывести на экран "ДА", иначе "НЕТ".
d = dict([i.split('=') for i in input().split()])
if ('5' in d) and ('house' in d) and ('True' in d): print("ДА")
else: print("НЕТ")


#6. На вход программе подаются данные в формате ключ=значение, записанные через пробел.
# Необходимо прочитать строку с этими данными и на их основе сформировать словарь d.
# Затем удалить из этого словаря ключи 'False' и '3', если они существуют.
# Ключами и значениями словаря являются строки. Вывести полученный словарь на экран командой:
# print(*sorted(d.items()))
d = dict([i.split('=') for i in input().split()])
if 'False' in d:
    d.pop('False')
if '3' in d:
    d.pop('3')
print(*sorted(d.items()))


#7. На вход программе подаются номера телефонов, записанные в одну строчку через пробел, с разными кодами стран: +7, +6, +2, +4 и т.д.
# Необходимо прочитать строку и на ее основе сформировать словарь d. Ключами словаря должны быть коды (строки: +7, +6, +2 и т. п.),
# а значениями список номеров в виде строк (следующих в том же порядке, что и в исходной строке) с соответствующими кодами.
# Полученный словарь вывести командой: print(*sorted(d.items()))
num_list = input().split()
d = {}
for i in num_list:
    d[i[:2]] = []
for i in num_list:
    d[i[:2]].append(i)
print(*sorted(d.items()))


#8. На вход программе поступают номера телефонов с привязкой к именам в виде строк следующего формата:
# номер_1 имя_1
# номер_2 имя_2
# ...
# номер_N имя_N
# В программе уже реализовано считывание всех строк и сохранение их в виде списка:
# lst_in = list(map(str.strip, sys.stdin.readlines()))
# На основе списка lst_in необходимо создать словарь d, где ключами будут имена, а значениями - список номеров
# телефонов для этого имени (ключа). Обратите внимание, что одному имени может принадлежать несколько разных номеров.
# Полученный словарь вывести командой:
# print(*sorted(d.items()))
lst_in = [i.split() for i in list(map(str.strip, sys.stdin.readlines()))]
d = {}
for i in lst_in:
    d[i[1]] = []
for i in lst_in:
    d[i[1]].append(i[0])
print(*sorted(d.items()))


#9. На вход программе поступают целые положительные числа. Необходимо с помощью цикла реализовать их считывание,
# пока не встретится число 0. В теле цикла для каждого прочитанного числа вычисляется квадратный корень
# (с точностью до сотых) и значение выводится на экран (в столбик). С помощью словаря выполните кэширование данных так,
# чтобы при повторном вводе того же самого числа результат не вычислялся, а бралось ранее вычисленное значение (из словаря).
# При этом на экране должно выводиться: значение из кэша: <число>
# num_inp = 1
# d = {}
# count = 1
# names = dict()
# while num_inp > 0:
#     num_inp = int(input())
#     num_inp_q = round((num_inp ** 0.5), 2)
#     d[num_inp] = num_inp_q
#     for key in d:
#         if d[num_inp] not in names.keys():
#             names[d[num_inp]] = 1
#         else:
#             names[d[num_inp]] += 1
#
#     for name, count in names.items():
#         print(f'{name}: {count}')