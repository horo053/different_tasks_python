#3. На вход программе подается строка из русских букв и символов пробела.
# Необходимо ее прочитать и закодировать азбукой Морзе, где каждой букве ставится в соответствие код из точки и тире.
# После каждой закодированной буквы должен стоять пробел (символ окончания кода буквы).
# После последнего кода пробела быть не должно (в конце строки). Коды азбуки Морзе приведены ниже для русского
# алфавита и символа пробела. Результат кодирования вывести в виде строки.
import sys

d = {'А': '.-', 'Б': '-...', 'В': '.--', 'Г': '--.', 'Д': '-..', 'Е': '.',
     'Ж': '...-', 'З': '--..', 'И': '..', 'Й': '.---', 'К': '-.-', 'Л': '.-..', 'М': '--',
     'Н': '-.', 'О': '---', 'П': '.--.', 'Р': '.-.', 'С': '...', 'Т': '-', 'У': '..-',
     'ф': '..-.', 'х': '....', 'ц': '-.-.', 'Ч': '---.', 'Ш': '----', 'Щ': '--.-',
     'Ъ': '--.--', 'Ы': '-.--', 'Ь': '-..-', 'Э': '..-..', 'Ю': '..--', 'Я': '.-.-', ' ': '-...-'
     }
lst_str1 = [i for i in input().upper()]
for index, item in enumerate(lst_str1):
    if item in d.keys(): lst_str1[index] = d.get(item)
print(*lst_str1)


#4. На вход программе подается закодированная строка с помощью азбуки Морзе. Коды разделены между собой пробелом.
# Необходимо ее раскодировать, используя азбуку Морзе из предыдущего занятия. Все буквы в строке должны быть
# малыми (нижний регистр). Полученное сообщение (строку) вывести на экран.
# P.S. Буквам е(ё) соответствует один и тот же код Морзе, поэтому всюду подставляется буква 'е'.
lst_str2 = input().split()
for index, item in enumerate(lst_str2):
    for ind, it in d.items():
        if item == it: lst_str2[index] = ind
print("".join(lst_str2).lower())


#5. На вход программе подается список целых чисел, записанных в одну строчку через пробел.
# Необходимо их прочитать и сохранить в виде списка. Затем, с помощью словаря выделите только уникальные
# (не повторяющиеся) числа. Сформируйте из них еще один список (уникальных чисел).
# Числа в этом списке должны идти в том же порядке, что и при чтении (из входного потока).
# Выведите уникальные числа на экран в одну строчку через пробел.
# P. S. Такая задача, обычно решается через множества, но мы их еще не проходили, поэтому воспользуемся словарем.
lst_int = list(map(int, input().split()))
d = {}
for i in lst_int:
    d.setdefault(i)
print(*d.keys())


#6. На вход программе подаются строки в формате:
# <день рождения 1> имя_1
# <день рождения 2> имя_2
# ...
# <день рождения N> имя_N
# В программе уже реализовано их считывание и сохранение в списке: lst_in = list(map(str.strip, sys.stdin.readlines()))
# На основе списка lst_in сформировать словарь, где ключи - дни рождения (целое число), а значения - имена (строка).
# Выведите полученный словарь в формате (см. пример ниже):
# день рождения 1: имя1, ..., имяN1
# день рождения 2: имя1, ..., имяN2
# ...
# день рождения M: имя1, ..., имяNM
lst_in = list(map(str.strip, sys.stdin.readlines()))
d = {}
for i in lst_in:
    d[i[0:i.index(" ")]] = []
for i in lst_in:
    d[i[0:i.index(" ")]].append(i[i.index(" ")+1:])
for i in d:
    print(i, end=": ")
    print(*d.get(i), sep=', ')


# 7. Объявите в программе словарь с наименованиями предметов и их весом (в граммах):
# things = {'карандаш': 20, 'зеркальце': 100, 'зонт': 500, 'рубашка': 300,
#           'брюки': 1000, 'бумага': 200, 'молоток': 600, 'пила': 400, 'удочка': 1200,
#           'расческа': 40, 'котелок': 820, 'палатка': 5240, 'брезент': 2130, 'спички': 10}
# Сергей собирается в поход и готов взвалить на свои хрупкие плечи максимальный вес в N кг (вводится с клавиатуры).
# Он решил класть в рюкзак предметы в порядке убывания их веса (сначала самые тяжелые, затем, все более легкие) так,
# чтобы их суммарный вес не превысил значения N кг. Все предметы даны в единственном экземпляре.
# Выведите список предметов (в строчку через пробел), которые берет с собой Сергей в порядке убывания их веса.
# P. S. 1 кг = 1000 грамм
things = {'карандаш': 20, 'зеркальце': 100, 'зонт': 500, 'рубашка': 300,
          'брюки': 1000, 'бумага': 200, 'молоток': 600, 'пила': 400, 'удочка': 1200,
          'расческа': 40, 'котелок': 820, 'палатка': 5240, 'брезент': 2130, 'спички': 10}
a = int(input())*1000
k = [i for i in things.keys()]
v = [i for i in things.values()]

while a > 0 and len(v) != 0:
    c = max(v)
    if int(c)>a:
        for i, g in enumerate(v):
            if g == c:
                del v[i]
                del k[i]
    else:
        a -= c
        for i, g in enumerate(v):
            if g == c:
                print(k[i], end=' ')
                del v[i]
                del k[i]