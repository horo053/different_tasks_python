#1. На вход программе подаются два списка целых чисел, каждый с новой строки (в строке наборы чисел следующих через пробел).
# Необходимо прочитать эти наборы чисел и сохранить их в отдельных списках (или кортежах).
# Затем, с помощью множеств(а) выбрать только уникальные числа, присутствующие и в первом и во втором списках одновременно.
# Результат выведите на экран в виде строки чисел, записанных по возрастанию через пробел, используя команду
# (здесь s - это множество, содержащее уникальные числа): print(*sorted(s))
# P. S. О функции sorted мы еще будем говорить, а также об операторе *.
# Пока просто запомните такую возможность сортировки и вывода произвольных коллекций на экран.
setA = set(map(int, input().split()))
setB = set(map(int, input().split()))
setAB = setA & setB
print(*sorted(setAB))


#2. На вход программе подаются два списка целых чисел, каждый с новой строки (в строке наборы чисел следующих через пробел).
# Необходимо прочитать эти наборы чисел и сохранить их в отдельных списках (или кортежах).
# Затем, с помощью множеств(а) выбрать уникальные числа, присутствующие в первом списке, но отсутствующие во втором.
# Результат выведите на экран в виде строки чисел, записанных по возрастанию через пробел, используя команду
# (здесь s - это множество, содержащее уникальные числа): print(*sorted(s))
setC = set(map(int, input().split()))
setD = set(map(int, input().split()))
setCD = setC - setD
print(*sorted(setCD))


#3. На вход программе подаются два списка целых чисел, каждый с новой строки (в строке наборы чисел следующих через пробел).
# Необходимо прочитать эти наборы чисел и сохранить их в отдельных списках (или кортежах).
# Затем, с помощью множеств(а) выбрать уникальные числа, присутствующие в первом или втором списках,
# но отсутствующие одновременно в обоих. Результат выведите на экран в виде строки чисел,
# записанных по возрастанию через пробел, используя команду (здесь s - это множество, содержащее уникальные числа):
# print(*sorted(s))
setE = set(map(int, input().split()))
setF = set(map(int, input().split()))
setEF = setE ^ setF
print(*sorted(setEF))


#4. На вход программе подаются две строки со списком городов, каждый с новой строки
# (в строках названия городов следуют через пробел). Необходимо прочитать эти строки и сохранить их в отдельных списках
# (или кортежах). Затем, с помощью множеств(а) сравнить их между собой на равенство по уникальным (не повторяющимся)
# городам. Если списки содержат одни и те же уникальные города (не важно в каком порядке),
# то вывести на экран "ДА", иначе "НЕТ".
setG = set(input().split())
setH = set(input().split())
if setG == setH: print("ДА")
else: print("НЕТ")


#5. На вход программе подаются оценки студента (его ответов у доски по предмету "Информатика") в виде чисел от 2 до 5,
# записанных в одну строчку через пробел. Необходимо прочитать эти числа. Затем, проверить,
# если студент имеет хотя бы одну двойку, то он не допускается до экзамена. Вывести на экран слово "ДОПУЩЕН",
# если студент не имеет ни одной двойки, иначе вывести "НЕ ДОПУЩЕН". При реализации задачи используйте множество
# для определения наличия двойки.
setI = set(map(int, input().split()))
if 2 in setI: print("НЕ ДОПУЩЕН")
else: print("ДОПУЩЕН")


#6. На вход программе подаются две строки со списком городов, которые объехал Сергей в 1-й и 2-й годы своего
# путешествия по России. Необходимо прочитать эти наборы чисел и сохранить их в отдельных списках (или кортежах).
# Затем, требуется определить, включал ли его маршрут во 2-й год все города 1-го года путешествия? Если это так,
# то вывести "ДА", иначе "НЕТ".
setJ = set(input().split())
setK = set(input().split())
if setJ <= setK: print("ДА")
else: print("НЕТ")


#7. На вход программе подается натуральное число, которое может содержать только простые множители 1, 2, 3, 5 и 7
# (любые из них, необязательно все). Необходимо прочитать это число и разложить его на простые множители.
# Затем, проверить, содержит ли оно множители 2, 3 и 5 (обязательно все их, хотя бы один раз).
# Если это так, то вывести "ДА", иначе "НЕТ".
intA = int(input())
setL = set()
setM = {2,3,5}
for i in range(1,11):
    if intA % i == 0: setL.add(i)
if 2 in setL and 3 in setL and 5 in setL: print("ДА")
else: print("НЕТ")