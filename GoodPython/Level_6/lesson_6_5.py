#1. На вход программе подаются два списка целых чисел, каждый с новой строки (в строке наборы чисел следующих через пробел).
# Необходимо прочитать эти наборы чисел и сохранить их в отдельных списках (или кортежах).
# Затем, с помощью множеств(а) выбрать только уникальные числа, присутствующие и в первом и во втором списках одновременно.
# Результат выведите на экран в виде строки чисел, записанных по возрастанию через пробел, используя команду
# (здесь s - это множество, содержащее уникальные числа): print(*sorted(s))
# P. S. О функции sorted мы еще будем говорить, а также об операторе *.
# Пока просто запомните такую возможность сортировки и вывода произвольных коллекций на экран.
# setA = set(map(int, input().split()))
# setB = set(map(int, input().split()))
# setAB = setA & setB
# print(*sorted(setAB))


#2. На вход программе подаются два списка целых чисел, каждый с новой строки (в строке наборы чисел следующих через пробел).
# Необходимо прочитать эти наборы чисел и сохранить их в отдельных списках (или кортежах).
# Затем, с помощью множеств(а) выбрать уникальные числа, присутствующие в первом списке, но отсутствующие во втором.
# Результат выведите на экран в виде строки чисел, записанных по возрастанию через пробел, используя команду
# (здесь s - это множество, содержащее уникальные числа): print(*sorted(s))
# setC = set(map(int, input().split()))
# setD = set(map(int, input().split()))
# setCD = setC - setD
# print(*sorted(setCD))


#3. На вход программе подаются два списка целых чисел, каждый с новой строки (в строке наборы чисел следующих через пробел).
# Необходимо прочитать эти наборы чисел и сохранить их в отдельных списках (или кортежах).
# Затем, с помощью множеств(а) выбрать уникальные числа, присутствующие в первом или втором списках,
# но отсутствующие одновременно в обоих. Результат выведите на экран в виде строки чисел,
# записанных по возрастанию через пробел, используя команду (здесь s - это множество, содержащее уникальные числа):
# print(*sorted(s))
# setE = set(map(int, input().split()))
# setF = set(map(int, input().split()))
# setEF = setE ^ setF
# print(*sorted(setEF))


#4. На вход программе подаются две строки со списком городов, каждый с новой строки
# (в строках названия городов следуют через пробел). Необходимо прочитать эти строки и сохранить их в отдельных списках
# (или кортежах). Затем, с помощью множеств(а) сравнить их между собой на равенство по уникальным (не повторяющимся)
# городам. Если списки содержат одни и те же уникальные города (не важно в каком порядке),
# то вывести на экран "ДА", иначе "НЕТ".
# setG = set(input().split())
# setH = set(input().split())
# if setG == setH: print("ДА")
# else: print("НЕТ")

