#2. На вход программы подаются два целых положительных числа n и m, записанных через пробел, причем, n < m.
# Необходимо прочитать эти числа и вывести в одну строку через пробел квадраты целых чисел в диапазоне [n; m].
# Программу реализовать при помощи цикла while.
n, m = map(int, input().split())
while n <= m:
   print(n**2, end=' ')
   n+=1


#3. На вход программы подается вещественное число: стоимость одной книги x рублей.
# Необходимо прочитать это число и вывести на экран в одну строчку через пробел стоимости 2, 3, ... 10-ти
# таких книг с точностью до десятых. Программу реализовать при помощи цикла while.
price = float(input())
x = 2
while x < 11:
    print(round(x*price, 1), end=" ")
    x+=1


#4. На вход программы подается целое положительное число n.
# Прочитайте это число, а затем, вычислите и выведите на экран следующую сумму
# с точностью до тысячных (три знака после запятой) Программу реализовать при помощи цикла while.
n1 = int(input())
s = 1
while n1 > 1:
    s += 1/n1
    n1-=1
print(round(s, 3))


#5. Написать программу, в которой пользователь на каждой итерации цикла(while ) должен вводить целое число.
# Цикл должен продолжаться, пока пользователь не введет число 0.
# Необходимо вычислить сумму введенных в цикле чисел и вывести результат (сумму) на экран.
# Программу реализовать при помощи цикла while.
sum = 0
n2 = 1
while n2 != 0:
    n2 = int(input())
    sum += n2
print(sum)


#6. На вход программе подается строка (слаг).
# Прочитайте эту строку и замените в ней все подряд идущие дефисы (--, ---, ---- и т.д.) на одинарные (-).
# Результат преобразования строки выведите на экран. Программу реализовать при помощи цикла while.
str1 = input()
while "--" in str1:
    str1 = str1.replace("--", '-')
print(str1)


#7. На вход программе подается натуральное число (то есть, целое положительное) от трехзначного и более.
# Необходимо прочитать это число и найти произведение всех его цифр. Результат (произведение) вывести на экран.
# Программу реализовать при помощи цикла while.
int1 = int(input())
mult = 1
while int1 > 0:
    mult *= int1 % 10
    int1 //= 10
print(mult)



#8. Последовательность Фибоначчи образуется так: первые два числа равны 1 и 1, а каждое последующее
# равно сумме двух предыдущих. В итоге, получаем такую последовательность чисел: 1, 1, 2, 3, 5, 8, 13, ...
# На вход программе подается целое положительное число n.
# Прочитайте это число и сформируйте последовательность Фибоначчи длиной n.
# Например, при n = 4 получается последовательность: 1 1 2 3
# Результат отобразите в виде строки полученных чисел, записанных через пробел. Программу реализовать при помощи цикла while.
n3 = int(input())
x = 1
y = 1
i = 0
print(x, y, end=' ')
while i < n3-2:
    sum = x + y
    x = y
    y = sum
    print((sum), end=' ')
    i+=1


#9. На вход программе подается целое положительное число n (количество часов).
# Прочитайте это число и сохраните в переменной n. Пусть одноклеточная амеба каждые 3 часа делится на 2 клетки.
# Необходимо определить, сколько клеток будет через n часов. Считать, что изначально была одна амеба.
# Результат (итоговое число клеток) вывести на экран. Задачу необходимо решить с использованием цикла while.
n4 = int(input())
cell = 1
while n4 > 3:
    cell += cell
    n4 -= 3
print(cell)


#10. Гражданин 1 января открыл счет в банке, вложив 1000 руб. Каждый год размер вклада увеличивается на 5% от имеющейся суммы.
# Определить сумму вклада через n лет (n - целое положительное число, читаемое из входного потока).
# Результат (сумму вклада) округлить до сотых и вывести на экран. Программу реализовать при помощи цикла while.
n5 = int(input())
rub = 1000
while n5 > 0:
    rub += rub * 0.05
    n5 -= 1
print(round(rub, 2))


#11. На вход программе подаются два натуральных четных числа n и m, записанных в одну строчку через пробел, причем n < m.
# Необходимо прочитать эти числа и напечатать все нечетные числа из интервала [n, m].
# Задачу следует решить без применения условного оператора. Результат вывести на экран в виде строки чисел, записанных через пробел.
# Программу реализовать при помощи цикла while.
n6, m1 = map(int, input().split())
while n6 < m1 and n6+1 % 2 != 0:
    print(n6+1, end=' ')
    n6 += 2


#12. Составить программу поиска всех трехзначных чисел, которые при делении на 47 дают в остатке 43 и кратны 3.
# Вывести найденные числа в одну строчку через пробел. Программу реализовать при помощи цикла while.
k = 100
while k < 1000:
    if k % 47 == 43 and k % 3 == 0:
        print(k, end=" ")
    k += 1