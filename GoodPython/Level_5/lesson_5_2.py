#2. Объявите в программе следующий одномерный список длиной 10 элементов, состоящий из нулей: p = [0] * 10
# На каждой итерации цикла запрашивайте у пользователя ввод целого числа - индекс элемента списка p,
# по которому записывается значение 1, если ее там еще нет. Если же 1 уже проставлена по текущему индексу,
# то список не менять. Необходимо расставить так пять единиц в списке p. После этого цикл прерывается.
# Программу реализовать с помощью цикла while и с использованием оператора continue,
# когда 1 уже проставлена в списке по текущему индексу, чтобы запросить другой индекс.
# Результат вывести на экран в виде последовательности чисел, записанных через
p = [0] * 10
sum = 0
while sum < 5:
    index = int(input())
    if p[index] == 1:
        continue
    p[index] = 1
    sum += 1
print(*p)


#3. Напишите программу, в которой на каждой итерации цикла (while) читается (из входного потока) целое число.
# Необходимо подсчитать произведение только положительных чисел, до тех пор, пока не встретится число 0.
# Реализовать пропуск вычислений с помощью оператора continue, а также использовать цикл while.
# Полученное произведение вывести на экран.
d = 1
mult = d
while d != 0:
    d = int(input())
    if d < 0:
        continue
    if d == 0: break
    mult *= d
print(mult)


#4. На вход программе подается строка с названиями городов, записанных в одну строчку через пробел.
# Прочитайте эту строку и сформируйте на ее основе список из названий городов. Необходимо определить,
# что в этом списке все города имеют длину более 5 символов. Если это так, то на экран вывести строку "ДА",
# иначе строку "НЕТ". Программу реализовать с использованием цикла while и оператора break.
lst = list(input().split())
i = 0
while i < len(lst):
    if len(lst[i]) < 5:
        print("НЕТ")
        break
    i += 1
else:
    print("ДА")


#5. На вход программе подается строка с именами студентов, записанных в одну строчку через пробел.
# Прочитайте эту строку и сформируйте на ее основе список из имен студентов. Необходимо определить,
# что в этом списке хотя бы одно имя начинается и заканчивается на ту же самую букву (без учета регистра).
# Если это так, то на экран вывести строку "ДА", иначе строку "НЕТ".
# Программу реализовать с использованием цикла while и оператора break.
students = list(input().split())
ind = 0
while ind < len(students):
    if students[ind][0].lower()== students[ind][-1]:
         print("ДА")
         break
    ind += 1
else:
    print("НЕТ")


#6. На вход программе подается натуральное число n (то есть, целое положительное). Прочитайте это число.
# В цикле переберите все целые числа в интервале [1; n] (включая границы) и сформируйте список из чисел, кратных 3 и 5 одновременно.
# Выведите на экран полученный список чисел в одну строчку через пробел, если значение n меньше 100.
# Иначе выведите на экран сообщение (без кавычек): "слишком большое значение n"
# Продумать логику работы программы так, чтобы после цикла while шел блок else.
n = int(input())
x = 1
lst2 = []
if n < 100:
    while x < n+1:
        if x % 3 == 0 and x % 5 ==0:
            lst2.append(x)
        x += 1
    print(*lst2)
else:
    print("слишком большое значение n")


#7. На вход программе подается натуральное число n. Прочитайте это число и выведите первое найденное натуральное число
# (то есть, перебирать числа, начиная с 1), квадрат которого больше значения n.
# Программу реализовать с использованием цикла while.
n2 = int(input())
y = 1
while n2:
    if y ** 2 > n2:
        print(y)
        break
    y += 1

#8. (На использование цикла while). Начав тренировки, лыжник в первый день пробежал 10 км.
# Каждый следующий день он увеличивал пробег на 10 % от пробега предыдущего дня.
# Определить в какой день он пробежит больше x км (натуральное число x читается из входного потока).
# Результат (искомый день) вывести на экран.
x = int(input())
km = 10
day = 1
while km <= x:
    km = km + (km * 0.1)
    day += 1
print(day)


#9. (На использование цикла while). На вход программы подаются строки (названия книг).
# В программе уже реализовано их чтение и сохранение в списке (каждый элемент - название книги).
# После этого, из полученного списка нужно удалить все названия, состоящие из двух и более слов
# (слова разделяются пробелом). Результат выведите на экран в виде строки из оставшихся названий через пробел.
import sys
lst_in = list(map(str.strip, sys.stdin.readlines()))
lst_new = []
k = 0
while k < len(lst_in):
    if " " not in lst_in[k]:
        lst_new.append(lst_in[k])
    k += 1
print(*lst_new)