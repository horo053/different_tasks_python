#2. На вход программе подается строка, содержащая целые числа, записанные через пробел.
# Необходимо прочитать эти числа и сохранить в списке lst (как числа в порядке их следования в строке).
# Проверить, если первое число сформированного списка не равно последнему числу, то в список добавить значение True,
# а иначе - добавить значение False. Результирующий список lst вывести на экран командой: print(*lst)
# Реализовать задачу без использования условных операторов.
lst_int = list(map(int, input().split()))
a = lst_int[0] != lst_int[-1]
lst_int.append(a)
print(*lst_int)


#3. Объявите в программе следующий список городов: cities = ["Москва", "Казань", "Ярославль"]
# Необходимо вставить во вторую позицию (вторым элементом) этого списка строку "Ульяновск".
# Выведите полученный список на экран командой: print(*cities)
cities = ["Москва", "Казань", "Ярославль"]
cities.insert(1, "Ульяновск")
print(*cities)


#4. На вход программы подается строка с номером телефона в формате: +7(xxx)xxx-xx-xx
# Необходимо прочитать эту строку и преобразовать ее в список lst (посимвольно, то есть, элементами списка будут
# являться отдельные символы строки). Затем, удалить первый '+', число 7 заменить на 8 и убрать дефисы.
# Отобразить полученный список на экране командой: print("".join(lst))
lst_phone = list(input())
lst_phone.pop(0)
lst_phone[0] = "8"
lst_phone.remove("-")
lst_phone.remove("-")
print("".join(lst_phone))
#ИЛИ
lst_phone = list(input().replace('-', ''))
lst_phone.remove('+')
lst_phone[0] = '8'
print("".join(lst_phone))


#5. На вход программы подается строка с именем, отчеством и фамилией, записанными через пробел.
# Необходимо прочитать эту строку и представить прочитанные данные в виде новой строки в формате: Фамилия И.О.
# Например, строка: "Сергей Михайлович Балакирев" преобразуется в строку: "Балакирев С.М."
lst_fio = list(input().split())
print(f"{lst_fio[2]} {lst_fio[0][0]}.{lst_fio[1][0]}.")


#7. На вход программы подаются целые числа, записанные в одну строку через пробел (не менее четырех).
# Необходимо прочитать эти числа и среди них найти три наименьших числа. Выведите на экран найденные три числа в
# порядке возрастания в одну строчку через пробел. Программу реализовать без использования условного оператора.
lst_int2 = list(map(int,input().split()))
lst2 = []
lst2.append(min(lst_int2))
lst_int2.remove(min(lst_int2))
lst2.append(min(lst_int2))
lst_int2.remove(min(lst_int2))
lst2.append(min(lst_int2))
lst_int2.remove(min(lst_int2))
lst2.sort()
print(*lst2)
#ИЛИ
print(*sorted(map(int, input().split()))[:3])


#8. На вход программы подаются целые числа, записанные в одну строку через пробел.
# Необходимо прочитать эти числа и сохранить их в списке lst. Удалите последнее значение из списка lst и если оно нечетное,
# то в список (в конец) добавьте булево значение True, а иначе False. Отобразите полученный список на экране командой: print(*lst)
# Программу реализуйте без использования условного оператора.
lst_int3 = list(map(int, input().split()))
b = (lst_int3[-1] % 2) != 0
lst_int3.pop()
lst_int3.append(b)
print(*lst_int3)


#9. На вход программы подаются оценки студента (числа от 2 до 5), записанные в одну строку через пробел.
# Необходимо прочитать эти числа и сохранить их в списке.
# Определите количество двоек в сформированном списке и выведите это значение на экран.
lst_int4 = list(map(int, input().split()))
print(lst_int4.count(2))


#10. На вход программы подается строка с названиями рек, записанными в одну строчку через пробел.
# Необходимо прочитать строку и сформировать список lst из названий рек.
# Затем, отсортировать по возрастанию полученный список по названиям и в отсортированном списке удалить первый элемент.
# Результирующий список отобразить на экране в одну строчку через пробел с помощью команды: print(*lst)
river = list(input().split())
river.sort()
river.pop(0)
print(*river)