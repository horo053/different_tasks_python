#1. На вход программе подаются два вещественных числа, записанных в одну строку через пробел.
# Необходимо их прочитать и вывести на экран наибольшее из этих чисел. Задачу решить с помощью условного оператора.
fl1, fl2 = map(float,input().split())
if fl1 < fl2: print(fl2)
else: print(fl1)


#2. На вход программе подается строка со словом. Необходимо его прочитать и определить, является ли это слово палиндромом
# (одинаково читается вперед и назад, например, АННА). Регистр букв не учитывать, т.е. Анна, анна, аННА
# - это все должно определяться, как палиндромы. Если введенное слово палиндром, на экран вывести "ДА", иначе "НЕТ".
str1 = input()
if str1.lower() == str1[::-1].lower(): print("ДА")
else:print("НЕТ")


#3. На вход программе подаются два целых положительных числа, записанных в одну строку через пробел.
# Необходимо прочитать эти числа в переменные m и n (в порядке считывания). Определить, если число m делится нацело
# на число n, то вывести на экран частное от деления (результат деления) в виде целого числа.
# В противном случае вывести сообщение «m на n нацело не делится» (без кавычек) и вместо m и n подставить
# соответствующие числа, например: «13 на 2 нацело не делится».
m, n = map(int,input().split())
if m % n == 0: print(m//n)
else:print(f"{m} на {n} нацело не делится")


#4. На вход программе подаются три целых положительных числа, записанных в одну строку через пробел.
# Необходимо прочитать эти числа и убедиться, что первые два числа - это катеты прямоугольного треугольника,
# а третье - его гипотенуза. (Подсказка: проверка делается по теореме Пифагора c**2 = a**2 + b**2).
# Если проверка проходит (истина), то вывести на экран "ДА", иначе "НЕТ".
a, b, c = map(int,input().split())
if c**2 == a**2 + b**2: print("ДА")
else: print("НЕТ")


#5. На вход программе подается четырехзначное число, которое нужно прочитать из входного потока.
# Проверить, что это число оканчивается на цифру 7. Вывести на экран "ДА", если это так, и "НЕТ" в противном случае.
int1 = int(input())
if int1 % 10 == 7: print("ДА")
else: print("НЕТ")


#6. На вход программе подается слово (строка). Необходимо прочитать это слово и проверить,
# что в нем присутствуют все три буквы: t, h и o (в произвольном порядке и хотя бы в одном экземпляре).
# Реализовать программу следует с помощью одного условного оператора.
# Если искомая проверка проходит, вывести "ДА", иначе "НЕТ".
str2 = input()
if str2.count("t") > 0 and str2.count("h") > 0 and str2.count("o") > 0: print("ДА")
else: print("НЕТ")


#7. На вход программе подается строка из названий городов, записанных через пробел.
# Необходимо прочитать эту строку и сформировать на ее основе список cities из названий городов.
# Затем, проверить, если в списке cities присутствует город Москва, то удалить этот элемент из списка.
#  Вывести на экран результирующий список cities командой: print(*cities)
cities = list(input().split())
if "Москва" in cities: cities.remove("Москва")
print(*cities)


#8. На вход программе подаются четыре целых числа a, b, c, d, записанных в одну строку через пробел.
# Необходимо прочитать эти числа и определить, войдет ли в конверт с внутренними размерами a и b мм (первые два числа)
# в прямоугольную открытку с размерами с и d мм (следующие два числа). Для размещения открытки в конверте необходим
# зазор в 1 мм с каждой стороны. Открытку можно поворачивать на 90 градусов.
# Вывести "ДА", если открытка входит, и "НЕТ" в противном случае.
a, b, c, d = map(int,input().split())
if (a-1 > c and b-1 > d) or (b-1 > c and a-1 > d): print("ДА")
else:print("НЕТ")


#9. На вход программе подается шестизначное число. Необходимо его прочитать и определить, является ли это число счастливым.
# (Счастливым называют такое шестизначное число, в котором сумма его первых трех цифр равна сумме последних трех его цифр.).
# Вывести "ДА", если число счастливое, и "НЕТ" в противном случае.
int2 = list(map(int, input()))
if sum(int2[0:3]) == sum(int2[3:7]): print("ДА")
else:print("НЕТ")


#10. Работа светофора для пешеходов запрограммирована следующим образом: в начале каждого часа в течение трех минут
# горит зеленый сигнал, затем в течение двух минут – красный, в течение трех минут – опять зеленый и т. д., процесс повторяется.
# На вход программе подается вещественное число t, означающее время в минутах, прошедшее с начала очередного часа.
# Необходимо прочитать это число и определить, сигнал какого цвета горит для пешеходов в момент времени t (прочитанного из входного потока).
# На экран вывести сообщение (без кавычек):
# "green" - для зеленого;
# "red" - для красного.
fl3 = float(input())
if fl3 % 5 < 3: print("green")
else:print("red")