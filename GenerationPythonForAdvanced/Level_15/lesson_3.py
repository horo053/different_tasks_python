import math
# 1. Дан список numbers, содержащий кортежи чисел. Напишите программу, которая с помощью встроенных функций min()
# и max() выводит те кортежи (каждый на отдельной строке), которые имеют минимальное и максимальное среднее
# арифметическое значение элементов. Примечание: Используйте необязательный аргумент key.
numbers = [(10, 10, 10), (30, 45, 56), (81, 39), (1, 2, 3), (12,), (-2, -4, 100), (1, 2, 99), (89, 9, 34),
           (10, 20, 30, -2), (50, 40, 50), (34, 78, 65), (-5, 90, -1, -5), (1, 2, 3, 4, 5, 6), (-9, 8, 4),
           (90, 1, -45, -21)]
def sr_a(n):
    return sum(n) / len(n)

print(min(numbers, key=sr_a))
print(max(numbers, key=sr_a))


# 2. Напишите программу, которая сортирует список points координат точек плоскости в соответствии с расстоянием от
# начала координат (точки (0;0)). Программа должна вывести отсортированный список.
points = [(-1, 1), (5, 6), (12, 0), (4, 3), (0, 1), (-3, 2), (0, 0), (-1, 3), (2, 0), (3, 0), (-9, 1), (3, 6), (8, 8)]

def rast(p):
    r = (p[0]**2 + p[1]**2)**0.5
    return r

print(sorted(points, key=rast))


# 3. Дан список numbers, содержащий кортежи чисел. Напишите программу, которая сортирует и выводит список numbers в
# соответствии с суммой минимального и максимального элемента кортежа. Примечание: В этой задаче мы считаем, что кортеж
# (2,1,3) меньше кортежа (6,4,5), так как 1+3<4+6. При этом кортеж (1,2,9) равен кортежу (4,5,6), так как 1+9 = 4+6.
numbers = [(10, 10, 10), (30, 45, 56), (81, 80, 39), (1, 2, 3), (12, 45, 67), (-2, -4, 100),
           (1, 2, 99), (89, 90, 34), (10, 20, 30), (50, 40, 50), (34, 78, 65), (-5, 90, -1)]

def sum_min_max(n):
    s = min(n) + max(n)
    return s

print(sorted(numbers, key=sum_min_max))


# 4. Список athletes содержит сведения о спортсменах в виде кортежей: (имя, возраст, рост, вес).
# Напишите программу сортировки списка спортсменов по указанному полю:
# 1: по имени;
# 2: по возрасту;
# 3: по росту;
# 4: по весу.
# Формат входных данных: На вход программе подается натуральное число от 1 до 4 – номер поля по которому требуется отсортировать список.
# Формат выходных данных: Программа должна вывести отсортированный по заданному полю список в соответствии с примерами.
# Примечание: Решите задачу без использования условного оператора.
athletes = [('Дима', 10, 130, 35), ('Тимур', 11, 135, 39), ('Руслан', 9, 140, 33), ('Рустам', 10, 128, 30),
            ('Амир', 16, 170, 70), ('Рома', 16, 188, 100), ('Матвей', 17, 168, 68), ('Петя', 15, 190, 90)]

def sort1(a):
    return a[0]
def sort2(a):
    return a[1]
def sort3(a):
    return a[2]
def sort4(a):
    return a[3]

funcs = [sort1, sort2, sort3, sort4]
n = int(input())
lst = sorted(athletes, key=funcs[n-1])
for i in lst:
    print(*i)


# 5. Напишите программу, которая принимает число и название функции, а выводит результат применения функции к данному числу.
# Список возможных функций:
# квадрат: функция принимает число и возвращает его квадрат;
# куб: функция принимает число и возвращает его куб;
# корень: функция принимает число и возвращает корень квадратный из этого числа;
# модуль: функция принимает число и возвращает его модуль;
# синус: функция принимает число (в радианах) и возвращает синус этого числа.
# Формат входных данных: На вход программе подается целое число и название функции, записанные на отдельных строках.
# Формат выходных данных: Программа должна выдать результат применения функции к числу.
def kv(s):
    return s**2
def kub(s):
    return s**3
def kor(s):
    return s**0.5
def mod(s):
    return abs(s)
def sinus(s):
    return math.sin(s)

d = {'квадрат':kv, 'куб':kub, 'корень':kor, 'модуль':mod, 'синус':sinus}
dig = int(input())
st = input()
print(d[st](dig))