# 1. Дополните приведенный код так, чтобы он вывел произведение элементов кортежа numbers.
numbers = (2, 3, 5, 7, -11, 13, 17, 19, 23, 29, 31, -6, 41, 43, 47, 53, 59, 61, -96, 71, 1000, -1)
k = 1
for i in numbers:
    k = k*i
print(k)


# 2. Дополните приведенный код так, чтобы он преобразовал строку в кортеж символов строки и вывел результат.
data = 'Python для продвинутых!'
print(tuple(data))


# 3. Программист Тимур написал программу для работы с биографическими данными русских поэтов. Данные содержатся в
# кортежах вида (фамилия, год рождения, город рождения). В процессе работы программы в некотором кортеже poet_data
# обнаружилась ошибка: ('Пушкин', 1799, 'Санкт-Петербург'). Тут неверно указано место рождения, ведь Александр
# Пушкин родился в Москве. Дополните приведенный код так, чтобы в переменной poet_data находился правильный
# кортеж (с исправленным значением), а затем выведите его содержимое.
poet_data = ('Пушкин', 1799, 'Санкт-Петербург')
poet_data = poet_data[:2] + ('Москва',)
print(poet_data)


# 4. Дополните приведенный код так, чтобы он вывел список, содержащий средние арифметические значения
# чисел каждого вложенного кортежа в заданном кортеже кортежей numbers.
numbers = ((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4), (90, 10))
lst = [sum(i)/len(i) for i in numbers]
print(lst)


# 5. Уравнение параболы имеет вид y =ax^2 + bx + c, где a != 0. Напишите программу, которая по введенным значениям
# a,b,c определяет и выводит вершину параболы.
a = int(input())
b = int(input())
c = int(input())
d1 = -(b / (2 * a))
d2 = ((4*a*c) - b**2) / (4*a)
t = (d1, d2, )
print(t)


# 6. Напишите программу, которая выводит список хорошистов и отличников в классе. На вход программе подается
# натуральное число n, далее следует n строк с фамилией школьника и его оценкой на каждой из них.
n = int(input())
lst = tuple(input() for _ in range(n))
for i in lst:
    print(i)
print()
for i in lst:
    if i[-1] in '45':
        print(i)


# 7. Напишите программу, которая считывает натуральное число n и выводит первые n чисел последовательности Трибоначчи.
n = int(input())
f1, f2, f3 = 1, 1, 1
for i in range(n):
    print(f1, end=' ')
    f1, f2, f3, = f2, f3, f1 + f2 + f3
